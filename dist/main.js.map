{"version":3,"sources":["webpack://javascript-project-2021/./src/country-modal.js","webpack://javascript-project-2021/./src/country.js","webpack://javascript-project-2021/./src/main.js","webpack://javascript-project-2021/./src/country-list.js","webpack://javascript-project-2021/./src/country-service.js"],"names":["CountryModal","constructor","data","this","countryDetails","el","document","createElement","container","querySelector","modal","modalBody","body","show","render","classList","remove","appendChild","style","overflow","initializeEvents","hide","add","innerHTML","name","flag","capital","subregion","area","toLocaleString","population","renderLanguages","renderCurrencies","addEventListener","languages","map","lang","join","currencies","cur","code","Country","alpha2Code","countryList","countryService","fetch","async","event","target","value","countries","length","forEach","country","then","result","json","countryData","catch","handleError","initialize"],"mappings":"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","file":"main.js","sourcesContent":["export class CountryModal {\r\n  countryDetails;\r\n  el;\r\n\r\n  constructor(data) {\r\n    this.countryDetails = data;\r\n    this.el = document.createElement('div');\r\n    this.container = document.querySelector('#container');\r\n    this.modal = document.querySelector('.modal');\r\n    this.modalBody = document.querySelector('.modal-body');\r\n    this.body = document.querySelector('body');\r\n  }\r\n\r\n  show() {\r\n    this.render();\r\n    this.modalBody.classList.remove('hidden');\r\n    this.modal.classList.remove('hidden');\r\n    this.modal.appendChild(this.el);\r\n    this.body.style.overflow = 'hidden';\r\n    this.initializeEvents();\r\n  }\r\n\r\n  hide() {\r\n    this.modalBody.classList.add('hidden');\r\n    this.body.style.overflow = 'scroll';\r\n    this.modal.innerHTML = '';\r\n  }\r\n\r\n  render() {\r\n    this.el.innerHTML = `\r\n    <div class=\"ui message\">   \r\n      <div class=\"modal-header\">\r\n        <h2>${this.countryDetails.name}</h2>\r\n        <img class=\"ui circular small image\" src=\"${this.countryDetails.flag}\">\r\n      </div>\r\n      <div class=\"country-details\">\r\n      <table class=\"ui very basic table\">\r\n      <tbody>\r\n        <tr>\r\n          <td>\r\n            <h4 class=\"ui image header\">\r\n               <i class=\"icon city\"></i>\r\n              <div class=\"content\">Capital</div>\r\n          </h4></td>\r\n          <td>${this.countryDetails.capital}</td>\r\n        </tr>\r\n       <tr>\r\n         <td>\r\n           <h4 class=\"ui image header\">\r\n              <i class=\"icon map\"></i>\r\n             <div class=\"content\">Region</div>\r\n         </h4></td>\r\n         <td>${this.countryDetails.subregion}</td>\r\n       </tr>\r\n       <tr>\r\n         <td>\r\n           <h4 class=\"ui image header\">\r\n              <i class=\"icon compress arrows alternate\"></i>\r\n             <div class=\"content\">Area</div>\r\n         </h4></td>\r\n         <td>${this.countryDetails.area.toLocaleString()}</td>\r\n       </tr>\r\n       <tr>\r\n         <td>\r\n           <h4 class=\"ui image header\">\r\n              <i class=\"icon users\"></i>\r\n             <div class=\"content\">Population</div>\r\n         </h4></td>\r\n         <td>${this.countryDetails.population.toLocaleString()}</td>\r\n       </tr>\r\n       <tr>\r\n        <td>\r\n          <h4 class=\"ui image header\">\r\n            <i class=\"icon flag\"></i>\r\n            <div class=\"content\">Language</div>\r\n        </h4></td>\r\n        <td>${this.renderLanguages()}</td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <h4 class=\"ui image header\">\r\n            <i class=\"icon money\"></i>\r\n            <div class=\"content\">Currency</div>\r\n        </h4></td>\r\n        <td>${this.renderCurrencies()}</td>\r\n      </tr>\r\n      </tbody>\r\n  </table>\r\n      <button class=\"negative circular ui icon button close-button\">\r\n      <i class=\"icon times\"></i>\r\n      </button>\r\n      </div>\r\n  </div>\r\n  `;\r\n  }\r\n\r\n  initializeEvents() {\r\n    document.querySelector('.close-button').addEventListener('click', () => {\r\n      this.hide();\r\n    });\r\n  }\r\n  renderLanguages() {\r\n    return this.countryDetails.languages\r\n      .map(lang => `<span>${lang.name} </span`)\r\n      .join('');\r\n  }\r\n\r\n  renderCurrencies() {\r\n    return this.countryDetails.currencies\r\n      .map(cur => `<p>${cur.name}/${cur.code} </p>`)\r\n      .join('');\r\n  }\r\n}\r\n","import { CountryModal } from './country-modal';\r\n\r\nexport class Country {\r\n  countryDetails;\r\n  modal;\r\n  el;\r\n\r\n  constructor(data) {\r\n    this.countryDetails = data;\r\n    this.modal = new CountryModal(data);\r\n    this.el = document.createElement('div');\r\n  }\r\n\r\n  render() {\r\n    this.el.classList.add('ui', 'card');\r\n    this.el.innerHTML = `\r\n    <div class=\"content\">\r\n      <h4 class=\"header\">${this.countryDetails.name}</h4>\r\n    </div>\r\n    <div class=\"image\">\r\n      <img id=\"${this.countryDetails.alpha2Code}-flag\" class=\"ui image country-flag\" src=\"${this.countryDetails.flag}\"></img>\r\n    </div>\r\n  `;\r\n  }\r\n\r\n  initializeEvents() {\r\n    document\r\n      .querySelector(`#${this.countryDetails.alpha2Code}-flag`)\r\n      .addEventListener('click', () => {\r\n        this.modal.show();\r\n      });\r\n  }\r\n}\r\n","import { CountryList } from './country-list';\r\nimport { CountryService } from './country-service';\r\n\r\nconst countryList = new CountryList(new CountryService());\r\n\r\ndocument.addEventListener('DOMContentLoaded', async () => {\r\n  countryList.initialize();\r\n});\r\n","export class CountryList {\r\n  countryService;\r\n  el;\r\n\r\n  constructor(countryService) {\r\n    this.countryService = countryService;\r\n    this.el = document.createElement('div');\r\n  }\r\n\r\n  async initialize() {\r\n    await this.countryService.fetch();\r\n    this.render();\r\n    this.initializeEvents();\r\n  }\r\n\r\n  initializeEvents() {\r\n    document.querySelector('#search').addEventListener('keyup', async event => {\r\n      await this.countryService.fetch(event.target.value);\r\n      this.render();\r\n    });\r\n  }\r\n\r\n  async render() {\r\n    if (this.countryService.countries.length === 0) {\r\n      document.querySelector('#container').innerHTML =\r\n        '<div class=\"not-found\">Name not found</div>';\r\n      return;\r\n    }\r\n\r\n    const container = document.querySelector('#container');\r\n    container.innerHTML = '';\r\n    this.countryService.countries.forEach(country => {\r\n      country.render();\r\n      container.appendChild(country.el);\r\n      country.initializeEvents();\r\n    });\r\n  }\r\n}\r\n","import { Country } from './country';\r\n\r\nexport class CountryService {\r\n  countries = [];\r\n\r\n  async fetch(name) {\r\n    if (!name) {\r\n      return fetch('https://restcountries.eu/rest/v2/all')\r\n        .then(result => result.json())\r\n        .then(result => {\r\n          this.countries = result.map(countryData => {\r\n            return new Country(countryData);\r\n          });\r\n        })\r\n        .catch(this.handleError);\r\n    }\r\n\r\n    return fetch(`https://restcountries.eu/rest/v2/name/${name}`)\r\n      .then(result => result.json())\r\n      .then(result => {\r\n        this.countries = result.map(countryData => {\r\n          return new Country(countryData);\r\n        });\r\n      })\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  handleError = () => {\r\n    this.countries = [];\r\n  };\r\n\r\n  get countries() {\r\n    return this.countries;\r\n  }\r\n}\r\n"],"sourceRoot":""}